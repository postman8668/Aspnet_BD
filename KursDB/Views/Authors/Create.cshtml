@model KursDB.Models.Author

@{
    ViewData["Title"] = "Create Author";
}

<h1>Create Author</h1>

<div class="row">
    <div class="col-md-6">
        <form asp-action="Create" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="LastName" class="control-label">Last Name*</label>
                <input asp-for="LastName" class="form-control" required maxlength="50" />
                <span asp-validation-for="LastName" class="text-danger"></span>
                <div class="invalid-feedback">Please provide a last name (max 50 characters).</div>
            </div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label">First Name*</label>
                <input asp-for="FirstName" class="form-control" required maxlength="50" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
                <div class="invalid-feedback">Please provide a first name (max 50 characters).</div>
            </div>

            <div class="form-group">
                <label asp-for="MiddleName" class="control-label">Middle Name</label>
                <input asp-for="MiddleName" class="form-control" maxlength="50" />
                <span asp-validation-for="MiddleName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="BirthYear" class="control-label">Birth Year</label>
                <input asp-for="BirthYear" class="form-control"
                       min="1000" max="@(DateTime.Now.Year + 5)" />
                <span asp-validation-for="BirthYear" class="text-danger"></span>
                <small class="form-text text-muted">Year between 1000 and @(DateTime.Now.Year + 5)</small>
            </div>

            <div class="form-group">
                <label asp-for="DeathYear" class="control-label">Death Year</label>
                <input asp-for="DeathYear" class="form-control"
                       min="1000" max="@(DateTime.Now.Year + 5)" />
                <span asp-validation-for="DeathYear" class="text-danger"></span>
                <small class="form-text text-muted">Year between 1000 and @(DateTime.Now.Year + 5)</small>
            </div>

            <div class="form-group">
                <label asp-for="Biography" class="control-label">Biography</label>
                <textarea asp-for="Biography" class="form-control" rows="4" maxlength="4000"></textarea>
                <span asp-validation-for="Biography" class="text-danger"></span>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Create</button>
                <a asp-action="Index" class="btn btn-secondary ml-2">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Client-side validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Birth/Death year validation
        document.getElementById('BirthYear').addEventListener('change', function() {
            var birthYear = parseInt(this.value);
            var deathYearInput = document.getElementById('DeathYear');
            var deathYear = parseInt(deathYearInput.value);

            if (birthYear && deathYear && deathYear < birthYear) {
                deathYearInput.setCustomValidity('Death year must be after birth year');
            } else {
                deathYearInput.setCustomValidity('');
            }
        });

        document.getElementById('DeathYear').addEventListener('change', function() {
            var deathYear = parseInt(this.value);
            var birthYearInput = document.getElementById('BirthYear');
            var birthYear = parseInt(birthYearInput.value);

            if (birthYear && deathYear && deathYear < birthYear) {
                this.setCustomValidity('Death year must be after birth year');
            } else {
                this.setCustomValidity('');
            }
        });
    </script>
}