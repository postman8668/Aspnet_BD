@model KursDB.Models.Employee

@{
    ViewData["Title"] = "Edit Employee";
}

<h1>Edit Employee</h1>

<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="EmployeeId" />

            <div class="form-group">
                <label asp-for="LastName" class="control-label">Last Name*</label>
                <input asp-for="LastName" class="form-control" required maxlength="50" />
                <span asp-validation-for="LastName" class="text-danger"></span>
                <div class="invalid-feedback">Please provide a last name (max 50 characters).</div>
            </div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label">First Name*</label>
                <input asp-for="FirstName" class="form-control" required maxlength="50" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
                <div class="invalid-feedback">Please provide a first name (max 50 characters).</div>
            </div>

            <div class="form-group">
                <label asp-for="MiddleName" class="control-label">Middle Name</label>
                <input asp-for="MiddleName" class="form-control" maxlength="50" />
                <span asp-validation-for="MiddleName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PositionId" class="control-label">Position*</label>
                <select asp-for="PositionId" class="form-control" required
                        asp-items="ViewBag.Positions">
                    <option value="">-- Select Position --</option>
                </select>
                <span asp-validation-for="PositionId" class="text-danger"></span>
                <div class="invalid-feedback">Please select a position.</div>
            </div>

            <div class="form-group">
                <label asp-for="HireDate" class="control-label">Hire Date*</label>
                <input asp-for="HireDate" class="form-control" type="date" required
                       max="@DateTime.Now.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="HireDate" class="text-danger"></span>
                <div class="invalid-feedback">Please provide a valid hire date (not in the future).</div>
            </div>

            <div class="form-group">
                <label asp-for="LibraryId" class="control-label">Library*</label>
                <select asp-for="LibraryId" class="form-control" required
                        asp-items="ViewBag.Libraries">
                    <option value="">-- Select Library --</option>
                </select>
                <span asp-validation-for="LibraryId" class="text-danger"></span>
                <div class="invalid-feedback">Please select a library.</div>
            </div>

            <div class="form-group">
                <label asp-for="Phone" class="control-label">Phone</label>
                <input asp-for="Phone" class="form-control" maxlength="20"
                       pattern="^\+?[0-9\s\-\(\)]{7,20}$" />
                <span asp-validation-for="Phone" class="text-danger"></span>
                <small class="form-text text-muted">Format: +79161234567 or 89161234567</small>
            </div>

            <div class="form-group">
                <label asp-for="Email" class="control-label">Email</label>
                <input asp-for="Email" class="form-control" type="email" maxlength="50" />
                <span asp-validation-for="Email" class="text-danger"></span>
                <small class="form-text text-muted">Format: user@example.com</small>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Save</button>
                <a asp-action="Index" class="btn btn-secondary ml-2">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Client-side validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}