@model KursDB.Models.ReaderAttribute

@{
    ViewData["Title"] = "Edit Reader Attribute";
}

<h1>Edit Reader Attribute</h1>

<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" class="needs-validation" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AttributeId" />

            <div class="form-group">
                <label asp-for="ReaderId" class="control-label">Reader*</label>
                <select asp-for="ReaderId" class="form-control" required
                        asp-items="ViewBag.ReaderId">
                    <option value="">-- Select Reader --</option>
                </select>
                <span asp-validation-for="ReaderId" class="text-danger"></span>
                <div class="invalid-feedback">Please select a reader.</div>
            </div>

            <div class="form-group">
                <label asp-for="AttributeName" class="control-label">Attribute Name*</label>
                <input asp-for="AttributeName" class="form-control" required maxlength="50" />
                <span asp-validation-for="AttributeName" class="text-danger"></span>
                <div class="invalid-feedback">Please provide an attribute name (max 50 characters).</div>
            </div>

            <div class="form-group">
                <label asp-for="AttributeValue" class="control-label">Attribute Value*</label>
                <input asp-for="AttributeValue" class="form-control" required maxlength="200" />
                <span asp-validation-for="AttributeValue" class="text-danger"></span>
                <div class="invalid-feedback">Please provide an attribute value (max 200 characters).</div>
            </div>

            <div class="form-group">
                <button type="submit" class="btn btn-primary">Save</button>
                <a asp-action="Index" class="btn btn-secondary ml-2">Back to List</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Client-side validation
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}